// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lph_api.Context;

#nullable disable

namespace lph_api.Migrations
{
    [DbContext(typeof(HospitalApiContext))]
    partial class HospitalApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lph_api.Model.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(2315),
                            Email = "Smith@gmail.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Password = "Incorrect",
                            PhoneNumber = "+3610123456",
                            Username = "Smithy",
                            Ward = "a"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(2326),
                            Email = "Doughy@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "Incorrect",
                            PhoneNumber = "+3620123456",
                            Username = "Doughy",
                            Ward = "b"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(2329),
                            Email = "Fizy@gmail.com",
                            FirstName = "Fizz",
                            LastName = "Buzz",
                            Password = "Incorrect",
                            PhoneNumber = "+3630123456",
                            Username = "Fizzy",
                            Ward = "c"
                        });
                });

            modelBuilder.Entity("lph_api.Model.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(1715),
                            Email = "Smith@gmail.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Password = "Incorrect",
                            PhoneNumber = "+3610123456",
                            Username = "Smithy"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(1766),
                            Email = "Doughy@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "Incorrect",
                            PhoneNumber = "+3620123456",
                            Username = "Doughy"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 10, 9, 10, 54, 51, 612, DateTimeKind.Local).AddTicks(1768),
                            Email = "Fizy@gmail.com",
                            FirstName = "Fizz",
                            LastName = "Buzz",
                            Password = "Incorrect",
                            PhoneNumber = "+3630123456",
                            Username = "Fizzy"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
